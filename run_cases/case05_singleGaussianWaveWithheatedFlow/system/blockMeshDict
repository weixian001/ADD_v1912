/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

x0 -150;
x1  350;
Nx  500;

x0f -10;
x1f  10;
Nxf  200;

y0 -0.5;
y1  0.5;

z0 -0.5;
z1  0.5;

Ny    1;

vertices
(
    ($x0  $y0 $z0) // 0
    ($x1  $y0 $z0) // 1
    ($x1  $y1 $z0) // 2
    ($x0  $y1 $z0) // 3
    ($x0  $y0 $z1) // 4
    ($x1  $y0 $z1) // 5
    ($x1  $y1 $z1) // 6
    ($x0  $y1 $z1) // 7
    
    ($x0f $y0 $z0) // 8
    ($x1f $y0 $z0) // 9
    ($x1f $y1 $z0) // 10
    ($x0f $y1 $z0) // 11
    ($x0f $y0 $z1) // 12
    ($x1f $y0 $z1) // 13
    ($x1f $y1 $z1) // 14
    ($x0f $y1 $z1) // 15
);

blocks
(
    hex ( 0  1  2  3  4  5  6  7) linearZone    ($Nx  $Ny 1)
    simpleGrading (1 1 1)
    
    hex ( 8  9 10 11 12 13 14 15) nonLinearZone ($Nxf $Ny 1)
    simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    interfaceL
    {
		type patch;
		faces ( (8 12 15 11) );
    }
    
    interfaceR
    {
		type patch;
		faces ( (9 10 14 13) );
    }
    
    left
    {
        type patch;
        faces ( (0 4 7 3) );
    }
	
	right
    {
        type patch;
        faces ( (1 2 6 5) );
    }
    
    top
    {
		type empty;
		faces
		(
			( 3  7  6  2)
			(11 15 14 10)
		);
    }
    
    bottom
    {
		type empty;
		faces
		(
			( 0  1  5  4)
			( 8  9 13 12)
		);
    }
    
    front
    {
        type empty;
        faces
        (
            ( 0  3  2  1)
            ( 8 11 10  9)
        );
    }
	
	back
	{
		type empty;
        faces
        (
            ( 5  6  7  4)
            (13 14 15 12)
        );
	}
);

mergePatchPairs
(
);

// ************************************************************************* //

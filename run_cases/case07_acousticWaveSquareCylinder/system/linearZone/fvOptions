/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvOptions;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

heatSource
{
    name			sourceTime;
    
    type            scalarCodedSource;
    
    active			on;

    scalarCodedSourceCoeffs
    {
        selectionMode   all;

        fields          (rhoEPrimeFlux);
        
        name            sourceTime;

        codeInclude
        #{
        #};

        codeCorrect
        #{
            const scalar period(0.002);
            const Time& time = fld.mesh().time();
            
            if (time.value() < 0.25*period)
            {
		        //const scalarField& V = fld.mesh().V();
		        const vectorField& C = fld.mesh().C();
		        
		        // Gaussian profile properties
				//const vector kp(1.0, 0.0, 0.0);                 // orientation
				const vector xp(-0.66, 0, 0.0);               // location
				const scalar ep(1e5);                           // strength
				const scalar ap(Foam::log(2.0)/Foam::sqr(0.1)); // width
		        
		        // Frequency properties
		        const scalar period(0.002);
				const scalar freq(Foam::constant::mathematical::twoPi/period);
				
				fld.primitiveFieldRef() 
					+= ep*Foam::exp(-ap*magSqr(C-xp))*Foam::cos(freq*time.value());
			}
        #};

        codeAddSup
        #{
            Pout<< "**codeAddSup**" << endl;
        #};

        codeConstrain
        #{
            Pout<< "**codeConstrain**" << endl;
        #};
    }

}

// ************************************************************************* //

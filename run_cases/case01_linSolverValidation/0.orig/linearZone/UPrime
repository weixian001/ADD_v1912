/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0/linearZone";
    object      UPrime;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   #codeStream
{
	codeInclude
    #{
        #include "fvCFD.H"
    #};
    
    codeOptions
    #{
        -I$(LIB_SRC)/finiteVolume/lnInclude \
        -I$(LIB_SRC)/meshTools/lnInclude
    #};

    code
    #{
        const IOdictionary& d = static_cast<const IOdictionary&>(dict);

        const fvMesh& mesh = refCast<const fvMesh>(d.db());
        
		// Pressure wave properties
		const vector kp(1.0, 0.0, 0.0);                 // orientation
		const vector xp(0.0, 0.0, 0.0);                 // location
		const scalar ep(0e-2);                          // strength
		const scalar ap(Foam::log(2.0)/Foam::sqr(3.0)); // width

		// Gas properties
		const scalar R(1.0/1.4), gamma(1.4);

		// Mean properties
		const scalar pMean(1.0), TMean(1.0);

		const scalar rhoMean(pMean/(R*TMean));

		const scalar cSqrMean(gamma*R*TMean);
		
		// Velocity perturbation
		const scalar uPrime(ep/(rhoMean*Foam::sqrt(cSqrMean)));

		vectorField U(mesh.nCells(), vector::zero);

        forAll(U, i)
        {
			const vector& xc = mesh.C().internalField()[i];

			const scalar rp = (xc - xp) & kp;

			U[i][0] += uPrime*Foam::exp(-ap*sqr(rp));
        }

		U.writeEntry("", os);
	#};
};

#include "boundaryFile"

// ************************************************************************* //

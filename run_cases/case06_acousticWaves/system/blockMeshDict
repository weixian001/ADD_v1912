/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

x0   -50;
x1	  50;
xl0 -250;
xl1	 250;

dxl  1;
dxn  0.1;

y0 -0.5;
y1	0.5;

z0 -0.5;
z1	0.5;

vertices
(
    ($x0 $y0 $z0) // 0
    ($x1 $y0 $z0) // 1
    ($x1 $y1 $z0) // 2 
    ($x0 $y1 $z0) // 3
    ($x0 $y0 $z1) // 4
    ($x1 $y0 $z1) // 5
    ($x1 $y1 $z1) // 6
    ($x0 $y1 $z1) // 7
    
    ($xl0 $y0 $z0) //  8
    ($xl1 $y0 $z0) //  9
    ($xl1 $y1 $z0) // 10
    ($xl0 $y1 $z0) // 11
    ($xl0 $y0 $z1) // 12
    ($xl1 $y0 $z1) // 13
    ($xl1 $y1 $z1) // 14
    ($xl0 $y1 $z1) // 15
);


blocks
(
    hex (0 1 2 3 4 5 6 7) nonLinearZone (#calc "int(($x1-($x0))/$dxn)" 1 1) 
    simpleGrading (1 1 1)
    
    hex (8 9 10 11 12 13 14 15) linearZone (#calc "int(($xl1-($xl0))/$dxl)" 1 1) 
    simpleGrading (1 1 1)
);

edges ();

boundary
(
    interfaceR
    {
    	type        patch;
    	faces
    	(
    		(1 2 6 5)
    	);
    }
    
    interfaceL
    {
    	type        patch;
    	faces
    	(
    		(4 7 3 0)
    	);
    }
    
    right
    {
    	type		patch;
    	faces
    	(
    		(9 10 14 13)
    	);
    }
    
    left
    {
    	type		patch;
    	faces
    	(
    		(12 15 11 8)
    	);
    }
    
    top
    {
    	type        empty;
    	faces
    	(
    		(3 7 6 2)
    		(11 15 14 10)
    	);
    }
    
    bottom
    {
    	type        empty;
    	faces
    	(
    		(0 1 5 4)
    		(8 9 13 12)
    	);
    }
    
	frontBack
    {
    	type        empty;
    	faces
    	(
    		(4 5 6 7)
    		(12 13 14 15)
    		(0 3 2 1)
    		(8 11 10 9)
    	);
    }
);

// ************************************************************************* //
